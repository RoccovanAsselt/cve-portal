# -*- coding: utf-8 -*-

import configparser
from functools import wraps

import redis as redisdb
from flask import abort, render_template
from flask_login import current_user
from flask_mail import Mail, Message
from flask_pymongo import PyMongo
import gnupg

import Config
import models


def send_email(to, subject, template, **kwargs):
    msg = Message(subject, recipients=[to], sender=cfg.get('SMTP', 'sender'))
    msg.body = render_template(template + '.txt', **kwargs)
    msg.html = render_template(template + '.html', **kwargs)
    return mail.send(msg)


def permission_required(permission):
    def decorator(f):
        @wraps(f)
        def decorated_function(*args, **kwargs):
            if not current_user.can(permission):
                abort(403)
            return f(*args, **kwargs)

        return decorated_function

    return decorator


def admin_required(f):
    return permission_required(models.Permission.ADMINISTER)(f)

configfile = 'config/config.cfg'
cfg = Config.Configuration()
gpg = False

try:
    gpg = gnupg.GPG(homedir=cfg.get('GPG', 'directory'),binary='gpg')
except RuntimeError as e:
    print(e.args[0])

redis = redisdb.StrictRedis(host=cfg.get('REDIS', 'host'),
                            port=cfg.get('REDIS', 'port'),
                            db=cfg.get('REDIS', 'db'))
mongo = PyMongo()
mail = Mail()
